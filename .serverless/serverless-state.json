{
  "service": {
    "service": "reviewdb",
    "serviceObject": {
      "name": "reviewdb"
    },
    "provider": {
      "stage": "dev",
      "variableSyntax": "\\${([ ~:a-zA-Z0-9._@'\",\\-\\/\\(\\)*]+?)}",
      "name": "aws",
      "runtime": "python3.6",
      "region": "us-east-1",
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "CreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/reviewdb-dev-create"
            }
          },
          "ReadLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/reviewdb-dev-read"
            }
          },
          "FetchLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/reviewdb-dev-fetch"
            }
          },
          "SentimentalizeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/reviewdb-dev-sentimentalize"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "reviewdb",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/reviewdb-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/reviewdb-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "reviewdb",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PythonRequirementsLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z/pythonRequirements.zip"
              },
              "LayerName": "reviewdb-dev-python-requirements",
              "Description": "Python requirements generated by serverless-python-requirements.",
              "CompatibleRuntimes": [
                "python3.6"
              ]
            }
          },
          "CreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z/create.zip"
              },
              "FunctionName": "reviewdb-dev-create",
              "Handler": "create.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 6,
              "Layers": [
                {
                  "Ref": "PythonRequirementsLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "CreateLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "CreateLambdaVersion6tMWOhHgcSPNpsvHLzmMqg1m8zDJXAWDVBsY5jT4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateLambdaFunction"
              },
              "CodeSha256": "oUjCrrxHB7Z9L8FIKjqez5aEk0eWlwQZvPrGhdBOAsE="
            }
          },
          "ReadLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z/read.zip"
              },
              "FunctionName": "reviewdb-dev-read",
              "Handler": "read.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 6,
              "Layers": [
                {
                  "Ref": "PythonRequirementsLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "ReadLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "ReadLambdaVersionSmO1KSpgPFHZq6o1R7qh80FqL1AEdhGk1Y01UUjsIs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ReadLambdaFunction"
              },
              "CodeSha256": "oUjCrrxHB7Z9L8FIKjqez5aEk0eWlwQZvPrGhdBOAsE="
            }
          },
          "FetchLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z/fetch.zip"
              },
              "FunctionName": "reviewdb-dev-fetch",
              "Handler": "fetch.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 6,
              "Layers": [
                {
                  "Ref": "PythonRequirementsLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "FetchLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "FetchLambdaVersionGOeoNPav3JzK6MiXdLktu7XQFrRQI2KxxjjsvvrXB8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FetchLambdaFunction"
              },
              "CodeSha256": "oUjCrrxHB7Z9L8FIKjqez5aEk0eWlwQZvPrGhdBOAsE="
            }
          },
          "SentimentalizeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z/sentimentalize.zip"
              },
              "FunctionName": "reviewdb-dev-sentimentalize",
              "Handler": "sentimentalize.handler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "python3.6",
              "Timeout": 6,
              "Layers": [
                {
                  "Ref": "PythonRequirementsLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "SentimentalizeLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "SentimentalizeLambdaVersion4O6aKuksDkFEK1u0CRq8alk2VD9t504SGKI5c8bxTA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SentimentalizeLambdaFunction"
              },
              "CodeSha256": "oUjCrrxHB7Z9L8FIKjqez5aEk0eWlwQZvPrGhdBOAsE="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-reviewdb",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              }
            }
          },
          "ApiGatewayResourceReviews": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "reviews",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceReviewsReviewhashVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceReviews"
              },
              "PathPart": "{review_hash}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFetch": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "fetch",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceFetchReviewhashVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceFetch"
              },
              "PathPart": "{review_hash}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodReviewsPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceReviews"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodReviewsReviewhashVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceReviewsReviewhashVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "ReadLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodFetchReviewhashVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceFetchReviewhashVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FetchLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1568569147263": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodReviewsPost",
              "ApiGatewayMethodReviewsReviewhashVarGet",
              "ApiGatewayMethodFetchReviewhashVarGet"
            ]
          },
          "CreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ReadLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ReadLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "FetchLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FetchLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "PythonRequirementsLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "PythonRequirementsLambdaLayer"
            }
          },
          "CreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateLambdaVersion6tMWOhHgcSPNpsvHLzmMqg1m8zDJXAWDVBsY5jT4"
            }
          },
          "ReadLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ReadLambdaVersionSmO1KSpgPFHZq6o1R7qh80FqL1AEdhGk1Y01UUjsIs"
            }
          },
          "FetchLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FetchLambdaVersionGOeoNPav3JzK6MiXdLktu7XQFrRQI2KxxjjsvvrXB8"
            }
          },
          "SentimentalizeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SentimentalizeLambdaVersion4O6aKuksDkFEK1u0CRq8alk2VD9t504SGKI5c8bxTA"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "layer": true,
        "zip": true
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "create": {
        "handler": "create.handler",
        "layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          }
        ],
        "events": [
          {
            "http": {
              "path": "reviews",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "reviewdb-dev-create",
        "package": {
          "artifact": "/home/srini/pyprjs/twtrvwdb/.serverless/create.zip"
        },
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {}
      },
      "read": {
        "handler": "read.handler",
        "layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          }
        ],
        "events": [
          {
            "http": {
              "path": "reviews/{review_hash}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "reviewdb-dev-read",
        "package": {
          "artifact": "/home/srini/pyprjs/twtrvwdb/.serverless/read.zip"
        },
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {}
      },
      "fetch": {
        "handler": "fetch.handler",
        "layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          }
        ],
        "events": [
          {
            "http": {
              "path": "fetch/{review_hash}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "reviewdb-dev-fetch",
        "package": {
          "artifact": "/home/srini/pyprjs/twtrvwdb/.serverless/fetch.zip"
        },
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {}
      },
      "sentimentalize": {
        "handler": "sentimentalize.handler",
        "layers": [
          {
            "Ref": "PythonRequirementsLambdaLayer"
          }
        ],
        "events": [],
        "name": "reviewdb-dev-sentimentalize",
        "package": {
          "artifact": "/home/srini/pyprjs/twtrvwdb/.serverless/sentimentalize.zip"
        },
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.6",
        "vpc": {}
      }
    },
    "serviceFilename": "serverless.yml",
    "layers": {
      "pythonRequirements": {
        "artifact": ".serverless/pythonRequirements.zip",
        "name": "reviewdb-dev-python-requirements",
        "description": "Python requirements generated by serverless-python-requirements.",
        "compatibleRuntimes": [
          "python3.6"
        ],
        "package": {}
      }
    }
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/reviewdb/dev/1568569240937-2019-09-15T17:40:40.937Z",
    "artifact": ""
  }
}